// Project: Automatic Row Addition
// Author: Alexandre Pawlicki Maule
// Date: October 16, 2023
// Description: This Script was designed to check if there are less than 500 rows remaining in the 'SVT Internal Tracking Sheet for CC'
//              and in case that is true, then add another 500 rows with the formulas necessary for the sheet to work properly. This 
//              Script is supposed to automate one of the responsibilities of my team so we can focus on more productive work.

function automaticRowAddition() {
  // opening Spreadsheet and getting the desired Sheet.
  var ss = SpreadsheetApp.openById("SPREADSHEET_ID");
  var sheet = ss.getSheetByName("SHEET_NAME");

  // Check if there is a necessity to create new rows, if yes, then run all the functions below.
  if(addRows(sheet)) {
    // run the rowCount function and assign the return value to 'row' so it can be passed to the other function.
    var row = rowCount(sheet);

    // run the other 3 functions.
    timeDuration(sheet,row);
    countFiveRows(sheet,row);
    hourFiled(sheet,row);
  };
}

function timeDuration(sheet,row) {
  // Getting the new Rows.
  var range = sheet.getRange('P'+ row + ':P' + (row+499));
  // Setting the formula in the new rows.
  range.setFormulaR1C1('=IF(R[0]C[-10] = "","",IF(R[0]C[-10]-R[0]C[-11] < 0,R1C1 + R[0]C[-10]-R[0]C[-11], R[0]C[-10]-R[0]C[-11]))');
}

function countFiveRows(sheet, row) {
  // Getting the new Rows.
  var range = sheet.getRange('N'+ row + ':N' + (row+499));
  // Setting the formula in the new rows.
  range.setFormulaR1C1('=IF(OR(R[0]C[-5]<>"",R[0]C[-4]<>"",R[0]C[-3]<>"",R[0]C[-2]<>"",R[0]C[-1]<>""), SUM(R[0]C[-5]:R[0]C[-1]),"")');
}

function hourFiled(sheet, row) {
  // getting the newly created range that the formula needs to be pasted.
  var range = sheet.getRange('Q'+ row + ':Q' + (row+499));

  // Setting the formula in the new rows.
  range.setFormulaR1C1('=IF(R[0]C[-1]="","",HOUR(R[0]C[-11]))')
}

function rowCount(sheet) {
  // Locating the last row of column A.
  var range = sheet.getRange("A:A");
  var lastRow = range.getNextDataCell(SpreadsheetApp.Direction.DOWN).getA1Notation();
  // grab only the number part of the range and turn it into an integer.
  lastRow = parseInt(lastRow.slice(1,lastRow.length));
  Logger.log(lastRow)

  // For loop to iterate through the new rows and setting the number in column A.
  var row = 0
  for (var i=1; i<501 ; i++) {
    row = lastRow + i;
    var range = sheet.getRange('A'+ row);
    Logger.log(row)

    // setting the value.
    range.setValue(row-1);
  }

  // return the lastRow to use in the functions with formulas.
  return lastRow + 1;
}

function addRows(sheet) {
  var range = sheet.getRange('C:C');
  
  // get the number or rows in the sheet.
  var maxRows = sheet.getMaxRows();
  Logger.log("maxRows " + maxRows)
  // get the last row that has content in the sheet.
  var lastUsedRow = range.getNextDataCell(SpreadsheetApp.Direction.DOWN).getA1Notation();
  // grab only the number part of the range and turn it into an integer.
  lastUsedRow = parseInt(lastUsedRow.slice(1,lastUsedRow.length));

  // Add 500 rows to the sheet if the difference is less than 500.
  if (maxRows - lastUsedRow < 500) {
    sheet.insertRowsAfter(maxRows,500);
    return true;
  } else {
    return false;
  };
}
